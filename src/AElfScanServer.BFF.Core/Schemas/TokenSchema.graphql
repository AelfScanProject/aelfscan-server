type AddressBaseInfo {
    name: String! @fromJson
    address: String! @fromJson
    addressType: Int! @fromJson
    isManager: Boolean! @fromJson
    isProducer: Boolean! @fromJson
}

type Token {
    token: TokenBaseInfo! @fromJson
    totalSupply: Int! @fromJson
    circulatingSupply: Int! @fromJson
    holders: Int! @fromJson
    holderPercentChange24H: Float! @fromJson
}

type TokenBaseInfo {
    name: String! @fromJson
    symbol: String! @fromJson
    imageUrl: String! @fromJson
}

type TokenTransfer {
    transactionId: String! @fromJson
    method: String! @fromJson
    blockHeight: Int! @fromJson
    blockTime: Int! @fromJson
    from: AddressBaseInfo @fromJson
    to: AddressBaseInfo @fromJson
    quantity: Float! @fromJson
}

type TokenHolder {
    address: AddressBaseInfo @fromJson
    quantity: Float! @fromJson
    percentage: Float! @fromJson
    value: Float! @fromJson
}

type TokenList {
    total: Int! @fromJson
    list: [Token!] @fromJson
}

type TokenDetail {
    total: Int! @fromJson
    list: [Token!] @fromJson
}

type TokenTransferList {
    total: Int! @fromJson
    list: [TokenTransfer!] @fromJson
    isAddress: Boolean! @fromJson
    balance: Float! @fromJson
    value: Float! @fromJson
}

type TokenHolderList {
    total: Int! @fromJson
    list: [TokenHolder!] @fromJson
}
#nft type
type NftCollection {
    nftCollection: TokenBaseInfo! @fromJson
    items: Int! @fromJson
    holders: Int! @fromJson
    totalTransfers: Int! @fromJson
    floorPrice: Float! @fromJson
    contractAddress: String @fromJson
}

type NftList {
    total: Int! @fromJson
    list: [NftCollection!] @fromJson
}

type Price {
    symbol: String! @fromJson
    priceChangePercent: Decimal! @fromJson
    lastPrice: Decimal! @fromJson
}

type Query {
    tokens(chainId: String!, skipCount: Int!, maxResultCount: Int!, sort: Int! orderBy: Int!): TokenList
    @http(url:"BASE_URL/token/list",method:"POST",path:"data")

    token(chainId: String!, symbol: String!): Token
    @http(url:"BASE_URL/token/detail",method:"GET",path:"data")

    tokenTransfers(chainId: String!, skipCount: Int!, maxResultCount: Int!, symbol: String): TokenTransferList
    @http(url:"BASE_URL/token/transfers",method:"POST",path:"data")

    tokenHolders(chainId: String!, skipCount: Int!, maxResultCount: Int!, symbol: String): TokenHolderList
    @http(url:"BASE_URL/token/holders",method:"POST",path:"data")

    nftList(chainId: String!, skipCount: Int!, maxResultCount: Int!): NftList
    @http(url:"BASE_URL/token/nft/list",method:"POST",path:"data")

    nftDetail(chainId: String!, collectionSymbol: String!): NftCollection
    @http(url:"BASE_URL/token/nft/detail",method:"POST",path:"data")

    price(baseCurrency: String!, quoteCurrency: String!): Price
    @http(url:"BASE_URL/token/price", method:"GET", path:"data")
}